<?xml version="1.0" encoding="utf-8"?>
<resources>
    <declare-styleable name="CycleViewPager2">
        <attr name="canAutoTurning" format="boolean" />
        <attr name="turningTime" format="integer" />
    </declare-styleable>

    <declare-styleable name="ShadowLayout">
        <attr name="isShowShadow" format="boolean" />
        <attr name="leftShow" format="boolean" />
        <attr name="rightShow" format="boolean" />
        <attr name="bottomShow" format="boolean" />
        <attr name="topShow" format="boolean" />
        <attr name="cornerRadius" format="dimension" />
        <attr name="cornerRadius_leftTop" format="dimension" />
        <attr name="cornerRadius_leftBottom" format="dimension" />
        <attr name="cornerRadius_rigthTop" format="dimension" />
        <attr name="cornerRadius_rightBottom" format="dimension" />
        <attr name="shadow_radius" format="dimension" />
        <attr name="shadow_dx" format="dimension" />
        <attr name="shadow_dy" format="dimension" />
        <attr name="shadowColor" format="color" />
        <attr name="shadowBackColor" format="color" />
        <attr name="shadowBackColorClicked" format="color" />
        <attr name="isSym" format="boolean" />
        <attr name="selectorMode">
            <flag name="pressed" value="1" />
            <flag name="selected" value="2" />
        </attr>
    </declare-styleable>

    <declare-styleable name="DWRefreshLayout">
        <attr name="refresh_style">
            <enum name="style_below" value="1" />
            <enum name="style_default" value="2" />
            <enum name="style_material" value="3" />
        </attr>

    </declare-styleable>

    <declare-styleable name="SwipeView">
        <attr name="sv_swipeType">
            <enum name="left" value="1" />
            <enum name="right" value="2" />
            <enum name="both" value="3" />
        </attr>
    </declare-styleable>

    <declare-styleable name="MarqueeTextView">
        <attr name="mtv_scroll_time" format="integer" />
        <attr name="mtv_scroll_interval" format="integer" />
        <attr name="mtv_scroll_count" format="integer" />
        <attr name="mtv_auto_scroll" format="boolean" />
    </declare-styleable>

    <declare-styleable name="AppBarLayout">
        <!-- Deprecated. Elevation is now controlled via a state list animator. -->
        <attr name="elevation"/>
        <attr name="android:background"/>
        <!-- The initial expanded state for the AppBarLayout. This only takes effect when this
             view is a direct child of a CoordinatorLayout. -->
        <attr format="boolean" name="expanded"/>
        <attr name="android:keyboardNavigationCluster"/>
        <attr name="android:touchscreenBlocksFocus"/>
        <!-- Whether the {@link AppBarLayout} should lift on scroll. If set to
             true, the {@link AppBarLayout} will animate to the lifted, or
             elevated, state when content is scrolled beneath it. Requires
             `app:layout_behavior="@string/appbar_scrolling_view_behavior` to be
             set on the scrolling sibling (e.g., `NestedScrollView`,
             `RecyclerView`, etc.). Default is false. -->
        <attr format="boolean" name="liftOnScroll"/>
        <!-- The id of the view that the {@link AppBarLayout} should use to determine whether
             it should be lifted (i.e., only if {@code liftOnScroll} is set to true).
             If this id is not set, the {@link AppBarLayout} will use the target view provided
             by nested scrolling to determine whether it should be lifted. -->
        <attr format="reference" name="liftOnScrollTargetViewId"/>
        <!-- The drawable to display in front of the layout's content, but behind the status bar.
             Only works on Lollipop when used together with android:fitSystemWindows="true". -->
        <attr format="color" name="statusBarForeground"/>
    </declare-styleable>
    <declare-styleable name="AppBarLayout_Layout">
        <attr name="layout_scrollFlags">
            <!-- Disable scrolling on the view. This flag should not be combined with any of the other
                 scroll flags. -->
            <flag name="noScroll" value="0x0"/>

            <!-- The view will be scroll in direct relation to scroll events. This flag needs to be
                 set for any of the other flags to take effect. If any sibling views
                 before this one do not have this flag, then this value has no effect. -->
            <flag name="scroll" value="0x1"/>

            <!-- When exiting (scrolling off screen) the view will be scrolled until it is
                 'collapsed'. The collapsed height is defined by the view's minimum height. -->
            <flag name="exitUntilCollapsed" value="0x2"/>

            <!-- When entering (scrolling on screen) the view will scroll on any downwards
                 scroll event, regardless of whether the scrolling view is also scrolling. This
                 is commonly referred to as the 'quick return' pattern. -->
            <flag name="enterAlways" value="0x4"/>

            <!-- An additional flag for 'enterAlways' which modifies the returning view to
                 only initially scroll back to it's collapsed height. Once the scrolling view has
                 reached the end of it's scroll range, the remainder of this view will be scrolled
                 into view. -->
            <flag name="enterAlwaysCollapsed" value="0x8"/>

            <!-- Upon a scroll ending, if the view is only partially visible then it will be
                 snapped and scrolled to it's closest edge. -->
            <flag name="snap" value="0x10"/>

            <!-- An additional flag to be used with 'snap'. If set, the view will be snapped to its
                 top and bottom margins, as opposed to the edges of the view itself. -->
            <flag name="snapMargins" value="0x20"/>
        </attr>

        <attr format="enum" name="layout_scrollEffect">
            <!-- No effect will be applied to this child when its parent
                 AppBarLayout's offset changes.-->
            <enum name="none" value="0"/>
            <!-- This view will be compressed (masked and parallaxed) when it reaches
                 the top of the screen and continues to scroll out of view.-->
            <enum name="compress" value="1"/>
        </attr>

        <!-- An interpolator to use when scrolling this View. Only takes effect when View
             is scrollable. -->
        <attr format="reference" name="layout_scrollInterpolator"/>
    </declare-styleable>

    <declare-styleable name="FloatingLinearLayout_Layout">
        <attr name="fll_layout_pin" format="boolean"/>
    </declare-styleable>
</resources>